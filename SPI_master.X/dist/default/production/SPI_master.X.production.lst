

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Feb 17 19:02:52 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F2550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _SSPCON1bits	set	4038
    51  0000                     _TRISCbits	set	3988
    52  0000                     _SSPSTATbits	set	4039
    53  0000                     _SSPBUF	set	4041
    54  0000                     _LATBbits	set	3978
    55  0000                     _TRISBbits	set	3987
    56  0000                     _PIR1bits	set	3998
    57  0000                     _INTCONbits	set	4082
    58  0000                     _PIE1bits	set	3997
    59  0000                     _OSCTUNEbits	set	3995
    60  0000                     _OSCCONbits	set	4051
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  007F3A                     __pcinit:
    66                           	opt stack 0
    67  007F3A                     start_initialization:
    68                           	opt stack 0
    69  007F3A                     __initialization:
    70                           	opt stack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (2 bytes)
    73  007F3A  6A06               	clrf	(__pbssCOMRAM+1)& (0+255),c
    74  007F3C  6A05               	clrf	__pbssCOMRAM& (0+255),c
    75  007F3E                     end_of_initialization:
    76                           	opt stack 0
    77  007F3E                     __end_of__initialization:
    78                           	opt stack 0
    79  007F3E  0100               	movlb	0
    80  007F40  EFCC  F03F         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	bssCOMRAM
    83  000005                     __pbssCOMRAM:
    84                           	opt stack 0
    85  000005                     _ret:
    86                           	opt stack 0
    87  000005                     	ds	1
    88  000006                     _rd:
    89                           	opt stack 0
    90  000006                     	ds	1
    91                           
    92                           	psect	cstackCOMRAM
    93  000001                     __pcstackCOMRAM:
    94                           	opt stack 0
    95  000001                     SPIWrite@d:
    96                           	opt stack 0
    97  000001                     DelayMs@Delay:
    98                           	opt stack 0
    99                           
   100                           ; 2 bytes @ 0x0
   101  000001                     	ds	2
   102  000003                     DelayMs@i:
   103                           	opt stack 0
   104                           
   105                           ; 2 bytes @ 0x2
   106  000003                     	ds	2
   107  000005                     
   108                           ; 1 bytes @ 0x4
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 17 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2, status,0, cstack
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   128 ;;      Params:         0       0       0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0       0       0
   130 ;;      Temps:          0       0       0       0       0       0       0       0       0
   131 ;;      Totals:         0       0       0       0       0       0       0       0       0
   132 ;;Total ram usage:        0 bytes
   133 ;; Hardware stack levels required when called:    1
   134 ;; This function calls:
   135 ;;		_DelayMs
   136 ;;		_SPIRead
   137 ;;		_SPIWrite
   138 ;;		_initialiseSPI
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  007F98                     __ptext0:
   146                           	opt stack 0
   147  007F98                     _main:
   148                           	opt stack 30
   149                           
   150                           ;main.c: 19: OSCCONbits.SCS0 = 1;
   151                           
   152                           ;incstack = 0
   153  007F98  80D3               	bsf	4051,0,c	;volatile
   154                           
   155                           ;main.c: 20: OSCCONbits.SCS1= 1;
   156  007F9A  82D3               	bsf	4051,1,c	;volatile
   157                           
   158                           ;main.c: 21: OSCCONbits.IRCF0 = 1;
   159  007F9C  88D3               	bsf	4051,4,c	;volatile
   160                           
   161                           ;main.c: 22: OSCCONbits.IRCF1 = 1;
   162  007F9E  8AD3               	bsf	4051,5,c	;volatile
   163                           
   164                           ;main.c: 23: OSCCONbits.IRCF2 = 0;
   165  007FA0  9CD3               	bcf	4051,6,c	;volatile
   166                           
   167                           ;main.c: 24: OSCTUNEbits.INTSRC = 1;
   168  007FA2  8E9B               	bsf	3995,7,c	;volatile
   169                           
   170                           ;main.c: 33: PIE1bits.SSPIE =1;
   171  007FA4  869D               	bsf	3997,3,c	;volatile
   172                           
   173                           ;main.c: 34: INTCONbits.PEIE = 1;
   174  007FA6  8CF2               	bsf	intcon,6,c	;volatile
   175                           
   176                           ;main.c: 35: PIR1bits.SSPIF = 0;
   177  007FA8  969E               	bcf	3998,3,c	;volatile
   178                           
   179                           ;main.c: 39: TRISBbits.RB5 = 0;
   180  007FAA  9A93               	bcf	3987,5,c	;volatile
   181                           
   182                           ;main.c: 40: TRISBbits.RB6 = 0;
   183  007FAC  9C93               	bcf	3987,6,c	;volatile
   184                           
   185                           ;main.c: 41: LATBbits.LATB6 =1;
   186  007FAE  8C8A               	bsf	3978,6,c	;volatile
   187                           
   188                           ;main.c: 43: initialiseSPI();
   189  007FB0  ECBD  F03F         	call	_initialiseSPI	;wreg free
   190  007FB4                     l710:
   191                           
   192                           ;main.c: 46: {
   193                           ;main.c: 52: DelayMs(2000);
   194  007FB4  0E07               	movlw	7
   195  007FB6  6E02               	movwf	DelayMs@Delay+1,c
   196  007FB8  0ED0               	movlw	208
   197  007FBA  6E01               	movwf	DelayMs@Delay,c
   198  007FBC  ECAF  F03F         	call	_DelayMs	;wreg free
   199                           
   200                           ;main.c: 53: LATBbits.LATB5 = 0;
   201  007FC0  9A8A               	bcf	3978,5,c	;volatile
   202                           
   203                           ;main.c: 54: ret = SPIWrite (0x02);
   204  007FC2  0E02               	movlw	2
   205  007FC4  ECA8  F03F         	call	_SPIWrite
   206  007FC8  6E05               	movwf	_ret,c
   207                           
   208                           ;main.c: 55: rd = SPIRead();
   209  007FCA  ECA2  F03F         	call	_SPIRead	;wreg free
   210  007FCE  6E06               	movwf	_rd,c
   211                           
   212                           ;main.c: 56: ret = SPIWrite(0x0F);
   213  007FD0  0E0F               	movlw	15
   214  007FD2  ECA8  F03F         	call	_SPIWrite
   215  007FD6  6E05               	movwf	_ret,c
   216                           
   217                           ;main.c: 61: LATBbits.LATB5 = 1;
   218  007FD8  8A8A               	bsf	3978,5,c	;volatile
   219                           
   220                           ;main.c: 67: if(rd == 0xF2)
   221  007FDA  0EF2               	movlw	242
   222  007FDC  1806               	xorwf	_rd,w,c
   223  007FDE  A4D8               	btfss	status,2,c
   224  007FE0  D008               	goto	l38
   225                           
   226                           ;main.c: 68: {
   227                           ;main.c: 71: LATBbits.LATB6 = 0;
   228  007FE2  9C8A               	bcf	3978,6,c	;volatile
   229                           
   230                           ;main.c: 72: DelayMs(2000);
   231  007FE4  0E07               	movlw	7
   232  007FE6  6E02               	movwf	DelayMs@Delay+1,c
   233  007FE8  0ED0               	movlw	208
   234  007FEA  6E01               	movwf	DelayMs@Delay,c
   235  007FEC  ECAF  F03F         	call	_DelayMs	;wreg free
   236                           
   237                           ;main.c: 73: LATBbits.LATB6 = 1;
   238  007FF0  8C8A               	bsf	3978,6,c	;volatile
   239  007FF2                     l38:
   240                           
   241                           ;main.c: 75: }
   242                           ;main.c: 77: DelayMs(2000);
   243  007FF2  0E07               	movlw	7
   244  007FF4  6E02               	movwf	DelayMs@Delay+1,c
   245  007FF6  0ED0               	movlw	208
   246  007FF8  6E01               	movwf	DelayMs@Delay,c
   247  007FFA  ECAF  F03F         	call	_DelayMs	;wreg free
   248  007FFE  D7DA               	goto	l710
   249  008000                     __end_of_main:
   250                           	opt stack 0
   251                           intcon	equ	0xFF2
   252                           status	equ	0xFD8
   253                           
   254 ;; *************** function _initialiseSPI *****************
   255 ;; Defined at:
   256 ;;		line 104 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		None
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   270 ;;      Params:         0       0       0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text1
   284  007F7A                     __ptext1:
   285                           	opt stack 0
   286  007F7A                     _initialiseSPI:
   287                           	opt stack 30
   288                           
   289                           ;main.c: 107: TRISBbits.RB0 = 1;
   290                           
   291                           ;incstack = 0
   292  007F7A  8093               	bsf	3987,0,c	;volatile
   293                           
   294                           ;main.c: 108: TRISBbits.RB1 = 0;
   295  007F7C  9293               	bcf	3987,1,c	;volatile
   296                           
   297                           ;main.c: 109: TRISCbits.RC7 = 0;
   298  007F7E  9E94               	bcf	3988,7,c	;volatile
   299                           
   300                           ;main.c: 113: SSPCON1bits.SSPEN = 0;
   301  007F80  9AC6               	bcf	4038,5,c	;volatile
   302                           
   303                           ;main.c: 115: SSPSTATbits.SMP = 0;
   304  007F82  9EC7               	bcf	4039,7,c	;volatile
   305                           
   306                           ;main.c: 116: SSPSTATbits.CKE = 0;
   307  007F84  9CC7               	bcf	4039,6,c	;volatile
   308                           
   309                           ;main.c: 118: SSPCON1bits.WCOL = 0;
   310  007F86  9EC6               	bcf	4038,7,c	;volatile
   311                           
   312                           ;main.c: 119: SSPCON1bits.SSPOV =0;
   313  007F88  9CC6               	bcf	4038,6,c	;volatile
   314                           
   315                           ;main.c: 120: SSPCON1bits.CKP = 1;
   316  007F8A  88C6               	bsf	4038,4,c	;volatile
   317                           
   318                           ;main.c: 121: SSPCON1bits.SSPM = 0b0000;
   319  007F8C  90C6               	bcf	4038,0,c	;volatile
   320  007F8E  92C6               	bcf	4038,1,c	;volatile
   321  007F90  94C6               	bcf	4038,2,c	;volatile
   322  007F92  96C6               	bcf	4038,3,c	;volatile
   323                           
   324                           ;main.c: 123: SSPCON1bits.SSPEN = 1;
   325  007F94  8AC6               	bsf	4038,5,c	;volatile
   326  007F96  0012               	return		;funcret
   327  007F98                     __end_of_initialiseSPI:
   328                           	opt stack 0
   329                           intcon	equ	0xFF2
   330                           status	equ	0xFD8
   331                           
   332 ;; *************** function _SPIWrite *****************
   333 ;; Defined at:
   334 ;;		line 87 in file "main.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;  d               1    wreg     unsigned char 
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  d               1    0[COMRAM] unsigned char 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      unsigned char 
   341 ;; Registers used:
   342 ;;		wreg, status,2
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   348 ;;      Params:         0       0       0       0       0       0       0       0       0
   349 ;;      Locals:         1       0       0       0       0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0
   351 ;;      Totals:         1       0       0       0       0       0       0       0       0
   352 ;;Total ram usage:        1 bytes
   353 ;; Hardware stack levels used:    1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text2
   362  007F50                     __ptext2:
   363                           	opt stack 0
   364  007F50                     _SPIWrite:
   365                           	opt stack 30
   366                           
   367                           ;incstack = 0
   368                           ;SPIWrite@d stored from wreg
   369  007F50  6E01               	movwf	SPIWrite@d,c
   370                           
   371                           ;main.c: 90: SSPBUF = d;
   372  007F52  C001  FFC9         	movff	SPIWrite@d,4041	;volatile
   373  007F56                     l44:
   374  007F56  A0C7               	btfss	4039,0,c	;volatile
   375  007F58  D7FE               	goto	l44
   376                           
   377                           ;main.c: 92: return SSPBUF;
   378  007F5A  50C9               	movf	4041,w,c	;volatile
   379  007F5C  0012               	return		;funcret
   380  007F5E                     __end_of_SPIWrite:
   381                           	opt stack 0
   382                           intcon	equ	0xFF2
   383                           status	equ	0xFD8
   384                           
   385 ;; *************** function _SPIRead *****************
   386 ;; Defined at:
   387 ;;		line 128 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  w               1    0        unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      unsigned char 
   394 ;; Registers used:
   395 ;;		wreg, status,2
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   401 ;;      Params:         0       0       0       0       0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0       0       0
   404 ;;      Totals:         0       0       0       0       0       0       0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text3
   415  007F44                     __ptext3:
   416                           	opt stack 0
   417  007F44                     _SPIRead:
   418                           	opt stack 30
   419                           
   420                           ;main.c: 130: unsigned char w;
   421                           ;main.c: 131: SSPBUF = 0x00;
   422                           
   423                           ;incstack = 0
   424  007F44  0E00               	movlw	0
   425  007F46  6EC9               	movwf	4041,c	;volatile
   426                           
   427                           ;main.c: 134: if (SSPSTATbits.BF == 0)
   428  007F48  B0C7               	btfsc	4039,0,c	;volatile
   429  007F4A  0012               	return	
   430                           
   431                           ;main.c: 135: {
   432                           ;main.c: 136: return SSPBUF;
   433  007F4C  50C9               	movf	4041,w,c	;volatile
   434  007F4E  0012               	return	
   435  007F50                     __end_of_SPIRead:
   436                           	opt stack 0
   437                           intcon	equ	0xFF2
   438                           status	equ	0xFD8
   439                           
   440 ;; *************** function _DelayMs *****************
   441 ;; Defined at:
   442 ;;		line 96 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;  Delay           2    0[COMRAM] unsigned int 
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  i               2    2[COMRAM] unsigned int 
   447 ;;  j               2    0        unsigned int 
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   457 ;;      Params:         2       0       0       0       0       0       0       0       0
   458 ;;      Locals:         2       0       0       0       0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0       0       0       0       0
   460 ;;      Totals:         4       0       0       0       0       0       0       0       0
   461 ;;Total ram usage:        4 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text4
   471  007F5E                     __ptext4:
   472                           	opt stack 0
   473  007F5E                     _DelayMs:
   474                           	opt stack 30
   475                           
   476                           ;main.c: 98: unsigned int i,j;
   477                           ;main.c: 100: for(i=0;i<Delay;i++);
   478                           
   479                           ;incstack = 0
   480  007F5E  0E00               	movlw	0
   481  007F60  6E04               	movwf	DelayMs@i+1,c
   482  007F62  0E00               	movlw	0
   483  007F64  6E03               	movwf	DelayMs@i,c
   484  007F66  D002               	goto	l704
   485  007F68                     l702:
   486  007F68  4A03               	infsnz	DelayMs@i,f,c
   487  007F6A  2A04               	incf	DelayMs@i+1,f,c
   488  007F6C                     l704:
   489  007F6C  5001               	movf	DelayMs@Delay,w,c
   490  007F6E  5C03               	subwf	DelayMs@i,w,c
   491  007F70  5002               	movf	DelayMs@Delay+1,w,c
   492  007F72  5804               	subwfb	DelayMs@i+1,w,c
   493  007F74  B0D8               	btfsc	status,0,c
   494  007F76  0012               	return	
   495  007F78  D7F7               	goto	l702
   496  007F7A                     __end_of_DelayMs:
   497                           	opt stack 0
   498  0000                     intcon	equ	0xFF2
   499                           status	equ	0xFD8
   500                           intcon	equ	0xFF2
   501                           status	equ	0xFD8
   502                           
   503                           	psect	rparam
   504  0000                     intcon	equ	0xFF2
   505                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_DelayMs

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     190
                            _DelayMs
                            _SPIRead
                           _SPIWrite
                      _initialiseSPI
 ---------------------------------------------------------------------------------
 (1) _initialiseSPI                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPIWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPIRead                                              1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayMs                                              6     4      2     175
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _SPIRead
   _SPIWrite
   _initialiseSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4       6       1        6.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      20        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Feb 17 19:02:52 2017

            _SSPSTATbits 000FC7                       l44 7F56                       l38 7FF2  
                     _rd 0006              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l702 7F68                      l710 7FB4                      l704 7F6C  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _ret 0005             __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7F98          __end_of_SPIRead 7F50  
                   start 0000          __end_of_DelayMs 7F7A            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000                    ?_main 0001  
          __CFG_USBDIV$1 000000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
       __end_of_SPIWrite 7F5E                    status 000FD8          __initialization 7F3A  
           __end_of_main 8000                   ??_main 0005            __activetblptr 000000  
        __CFG_CCP2MX$OFF 000000                ??_SPIRead 0001                ??_DelayMs 0003  
                 _SSPBUF 000FC9           __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000   __size_of_initialiseSPI 001E               __accesstop 0060  
__end_of__initialization 7F3E          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_SPIWrite 0001            _initialiseSPI 7F7A  
             ??_SPIWrite 0001                  _SPIRead 7F44                  _DelayMs 7F5E  
         ?_initialiseSPI 0001                  __Hparam 0000                  __Lparam 0000  
              SPIWrite@d 0001                  __pcinit 7F3A                  __ramtop 0800  
                __ptext0 7F98                  __ptext1 7F7A                  __ptext2 7F50  
                __ptext3 7F44                  __ptext4 7F5E     end_of_initialization 7F3E  
              _TRISBbits 000F93                _TRISCbits 000F94          ??_initialiseSPI 0001  
           DelayMs@Delay 0001        __size_of_SPIWrite 000E      start_initialization 7F3A  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0005                 ?_SPIRead 0001  
               ?_DelayMs 0001                 _LATBbits 000F8A                 DelayMs@i 0003  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
               _SPIWrite 7F50         __size_of_SPIRead 000C         __size_of_DelayMs 001C  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0068  
  __end_of_initialiseSPI 7F98    __CFG_CPUDIV$OSC1_PLL2 000000              _OSCTUNEbits 000F9B  
             _INTCONbits 000FF2               _OSCCONbits 000FD3      __CFG_FOSC$INTOSC_EC 000000  
            _SSPCON1bits 000FC6  
