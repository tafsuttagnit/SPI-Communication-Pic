

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Feb 17 19:06:29 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F2550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	nvCOMRAM
    51  000001                     __pnvCOMRAM:
    52                           	opt stack 0
    53  000001                     _rd:
    54                           	opt stack 0
    55  000001                     	ds	1
    56  0000                     _SSPSTATbits	set	4039
    57  0000                     _SSPCON1bits	set	4038
    58  0000                     _TRISAbits	set	3986
    59  0000                     _TRISCbits	set	3988
    60  0000                     _ADCON1	set	4033
    61  0000                     _PIR1bits	set	3998
    62  0000                     _SSPBUF	set	4041
    63  0000                     _LATBbits	set	3978
    64  0000                     _TRISBbits	set	3987
    65  0000                     _INTCONbits	set	4082
    66  0000                     _PIE1bits	set	3997
    67  0000                     _OSCTUNEbits	set	3995
    68  0000                     _OSCCONbits	set	4051
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  007F7C                     __pcinit:
    74                           	opt stack 0
    75  007F7C                     start_initialization:
    76                           	opt stack 0
    77  007F7C                     __initialization:
    78                           	opt stack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (1 bytes)
    81  007F7C  6A02               	clrf	__pbssCOMRAM& (0+255),c
    82  007F7E                     end_of_initialization:
    83                           	opt stack 0
    84  007F7E                     __end_of__initialization:
    85                           	opt stack 0
    86  007F7E  0100               	movlb	0
    87  007F80  EFD9  F03F         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMRAM
    90  000002                     __pbssCOMRAM:
    91                           	opt stack 0
    92  000002                     _ret:
    93                           	opt stack 0
    94  000002                     	ds	1
    95                           
    96                           	psect	cstackCOMRAM
    97  000000                     __pcstackCOMRAM:
    98                           	opt stack 0
    99  000000                     
   100                           ; 1 bytes @ 0x0
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 13 in file "main_slave.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, status,2, status,0, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : 0/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   120 ;;      Params:         0       0       0       0       0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0       0       0       0       0
   122 ;;      Temps:          0       0       0       0       0       0       0       0       0
   123 ;;      Totals:         0       0       0       0       0       0       0       0       0
   124 ;;Total ram usage:        0 bytes
   125 ;; Hardware stack levels required when called:    1
   126 ;; This function calls:
   127 ;;		_SPIRead
   128 ;;		_initialiseSPI
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           	psect	text0
   135  007FB2                     __ptext0:
   136                           	opt stack 0
   137  007FB2                     _main:
   138                           	opt stack 30
   139                           
   140                           ;main_slave.c: 28: OSCCONbits.SCS0 = 1;
   141                           
   142                           ;incstack = 0
   143  007FB2  80D3               	bsf	4051,0,c	;volatile
   144                           
   145                           ;main_slave.c: 29: OSCCONbits.SCS1 = 1;
   146  007FB4  82D3               	bsf	4051,1,c	;volatile
   147                           
   148                           ;main_slave.c: 30: OSCCONbits.IRCF0 = 1;
   149  007FB6  88D3               	bsf	4051,4,c	;volatile
   150                           
   151                           ;main_slave.c: 31: OSCCONbits.IRCF1 = 1;
   152  007FB8  8AD3               	bsf	4051,5,c	;volatile
   153                           
   154                           ;main_slave.c: 32: OSCCONbits.IRCF2 = 0;
   155  007FBA  9CD3               	bcf	4051,6,c	;volatile
   156                           
   157                           ;main_slave.c: 33: OSCTUNEbits.INTSRC = 1;
   158  007FBC  8E9B               	bsf	3995,7,c	;volatile
   159                           
   160                           ;main_slave.c: 40: PIE1bits.SSPIE =1;
   161  007FBE  869D               	bsf	3997,3,c	;volatile
   162                           
   163                           ;main_slave.c: 41: INTCONbits.PEIE = 1;
   164  007FC0  8CF2               	bsf	intcon,6,c	;volatile
   165                           
   166                           ;main_slave.c: 46: TRISBbits.RB4 = 0;
   167  007FC2  9893               	bcf	3987,4,c	;volatile
   168                           
   169                           ;main_slave.c: 47: TRISBbits.RB5 = 0;
   170  007FC4  9A93               	bcf	3987,5,c	;volatile
   171                           
   172                           ;main_slave.c: 48: TRISBbits.RB6 = 0;
   173  007FC6  9C93               	bcf	3987,6,c	;volatile
   174                           
   175                           ;main_slave.c: 50: LATBbits.LATB4 = 0;
   176  007FC8  988A               	bcf	3978,4,c	;volatile
   177                           
   178                           ;main_slave.c: 51: LATBbits.LATB5 = 0;
   179  007FCA  9A8A               	bcf	3978,5,c	;volatile
   180                           
   181                           ;main_slave.c: 52: LATBbits.LATB6 =1;
   182  007FCC  8C8A               	bsf	3978,6,c	;volatile
   183                           
   184                           ;main_slave.c: 58: initialiseSPI();
   185  007FCE  ECC8  F03F         	call	_initialiseSPI	;wreg free
   186  007FD2                     l37:
   187                           
   188                           ;main_slave.c: 63: {
   189                           ;main_slave.c: 67: rd = SPIRead();
   190  007FD2  ECC2  F03F         	call	_SPIRead	;wreg free
   191  007FD6  6E01               	movwf	_rd,c
   192                           
   193                           ;main_slave.c: 85: if (rd == 0x0F)
   194  007FD8  0E0F               	movlw	15
   195  007FDA  1801               	xorwf	_rd,w,c
   196  007FDC  A4D8               	btfss	status,2,c
   197  007FDE  D003               	goto	l699
   198                           
   199                           ;main_slave.c: 86: {
   200                           ;main_slave.c: 87: LATBbits.LATB4 = 1;
   201  007FE0  888A               	bsf	3978,4,c	;volatile
   202                           
   203                           ;main_slave.c: 88: LATBbits.LATB5 = 0;
   204  007FE2  9A8A               	bcf	3978,5,c	;volatile
   205                           
   206                           ;main_slave.c: 91: }
   207  007FE4  D006               	goto	l703
   208  007FE6                     l699:
   209                           
   210                           ;main_slave.c: 92: else if (rd == 0x02)
   211  007FE6  0E02               	movlw	2
   212  007FE8  1801               	xorwf	_rd,w,c
   213  007FEA  A4D8               	btfss	status,2,c
   214  007FEC  D002               	goto	l703
   215                           
   216                           ;main_slave.c: 93: {
   217                           ;main_slave.c: 94: LATBbits.LATB4 = 0;
   218  007FEE  988A               	bcf	3978,4,c	;volatile
   219                           
   220                           ;main_slave.c: 95: LATBbits.LATB5 = 1;
   221  007FF0  8A8A               	bsf	3978,5,c	;volatile
   222  007FF2                     l703:
   223                           
   224                           ;main_slave.c: 96: }
   225                           ;main_slave.c: 101: if (ret == 0xF2 )
   226  007FF2  0EF2               	movlw	242
   227  007FF4  1802               	xorwf	_ret,w,c
   228  007FF6  A4D8               	btfss	status,2,c
   229  007FF8  D7EC               	goto	l37
   230                           
   231                           ;main_slave.c: 102: {
   232                           ;main_slave.c: 103: LATBbits.LATB6 = 0;
   233  007FFA  9C8A               	bcf	3978,6,c	;volatile
   234                           
   235                           ;main_slave.c: 105: LATBbits.LATB6 = 1;
   236  007FFC  8C8A               	bsf	3978,6,c	;volatile
   237  007FFE  D7E9               	goto	l37
   238  008000                     __end_of_main:
   239                           	opt stack 0
   240                           intcon	equ	0xFF2
   241                           status	equ	0xFD8
   242                           
   243 ;; *************** function _initialiseSPI *****************
   244 ;; Defined at:
   245 ;;		line 163 in file "main_slave.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;		None
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   259 ;;      Params:         0       0       0       0       0       0       0       0       0
   260 ;;      Locals:         0       0       0       0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0
   262 ;;      Totals:         0       0       0       0       0       0       0       0       0
   263 ;;Total ram usage:        0 bytes
   264 ;; Hardware stack levels used:    1
   265 ;; This function calls:
   266 ;;		Nothing
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text1
   273  007F90                     __ptext1:
   274                           	opt stack 0
   275  007F90                     _initialiseSPI:
   276                           	opt stack 30
   277                           
   278                           ;main_slave.c: 166: ADCON1 = 0x0F;
   279                           
   280                           ;incstack = 0
   281  007F90  0E0F               	movlw	15
   282  007F92  6EC1               	movwf	4033,c	;volatile
   283                           
   284                           ;main_slave.c: 167: TRISBbits.RB0 = 1;
   285  007F94  8093               	bsf	3987,0,c	;volatile
   286                           
   287                           ;main_slave.c: 168: TRISBbits.RB1 = 1;
   288  007F96  8293               	bsf	3987,1,c	;volatile
   289                           
   290                           ;main_slave.c: 169: TRISCbits.RC7 = 0;
   291  007F98  9E94               	bcf	3988,7,c	;volatile
   292                           
   293                           ;main_slave.c: 170: TRISAbits.RA5 = 1;
   294  007F9A  8A92               	bsf	3986,5,c	;volatile
   295                           
   296                           ;main_slave.c: 173: SSPCON1bits.SSPEN = 0;
   297  007F9C  9AC6               	bcf	4038,5,c	;volatile
   298                           
   299                           ;main_slave.c: 175: SSPSTATbits.SMP = 0;
   300  007F9E  9EC7               	bcf	4039,7,c	;volatile
   301                           
   302                           ;main_slave.c: 176: SSPSTATbits.CKE = 0;
   303  007FA0  9CC7               	bcf	4039,6,c	;volatile
   304                           
   305                           ;main_slave.c: 179: SSPCON1bits.SSPOV =0;
   306  007FA2  9CC6               	bcf	4038,6,c	;volatile
   307                           
   308                           ;main_slave.c: 180: SSPCON1bits.CKP = 1;
   309  007FA4  88C6               	bsf	4038,4,c	;volatile
   310                           
   311                           ;main_slave.c: 181: SSPCON1bits.SSPM = 0b0101;
   312  007FA6  50C6               	movf	4038,w,c	;volatile
   313  007FA8  0BF0               	andlw	-16
   314  007FAA  0905               	iorlw	5
   315  007FAC  6EC6               	movwf	4038,c	;volatile
   316                           
   317                           ;main_slave.c: 183: SSPCON1bits.SSPEN = 1;
   318  007FAE  8AC6               	bsf	4038,5,c	;volatile
   319  007FB0  0012               	return		;funcret
   320  007FB2                     __end_of_initialiseSPI:
   321                           	opt stack 0
   322                           intcon	equ	0xFF2
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _SPIRead *****************
   326 ;; Defined at:
   327 ;;		line 138 in file "main_slave.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  w               1    0        unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      unsigned char 
   334 ;; Registers used:
   335 ;;		wreg, status,2
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text2
   355  007F84                     __ptext2:
   356                           	opt stack 0
   357  007F84                     _SPIRead:
   358                           	opt stack 30
   359                           
   360                           ;main_slave.c: 140: unsigned char w;
   361                           ;main_slave.c: 141: SSPBUF = 0x00;
   362                           
   363                           ;incstack = 0
   364  007F84  0E00               	movlw	0
   365  007F86  6EC9               	movwf	4041,c	;volatile
   366  007F88                     l47:
   367  007F88  A69E               	btfss	3998,3,c	;volatile
   368  007F8A  D7FE               	goto	l47
   369                           
   370                           ;main_slave.c: 145: return SSPBUF;
   371  007F8C  50C9               	movf	4041,w,c	;volatile
   372  007F8E  0012               	return	
   373  007F90                     __end_of_SPIRead:
   374                           	opt stack 0
   375  0000                     intcon	equ	0xFF2
   376                           status	equ	0xFD8
   377                           intcon	equ	0xFF2
   378                           status	equ	0xFD8
   379                           
   380                           	psect	rparam
   381  0000                     intcon	equ	0xFF2
   382                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _SPIRead
                      _initialiseSPI
 ---------------------------------------------------------------------------------
 (1) _initialiseSPI                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPIRead                                              1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPIRead
   _initialiseSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       2       1        2.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      20        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Feb 17 19:06:29 2017

            _SSPSTATbits 000FC7                       l37 7FD2                       l47 7F88  
                     _rd 0001              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l703 7FF2                      l699 7FE6             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      _ret 0002  
           __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
           __CFG_PWRT$ON 000000                     _main 7FB2          __end_of_SPIRead 7F90  
                   start 0000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000                    ?_main 0000            __CFG_USBDIV$1 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    status 000FD8          __initialization 7F7C  
           __end_of_main 8000                   ??_main 0000            __activetblptr 000000  
        __CFG_CCP2MX$OFF 000000                   _ADCON1 000FC1                ??_SPIRead 0000  
                 _SSPBUF 000FC9           __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000   __size_of_initialiseSPI 0022               __accesstop 0060  
__end_of__initialization 7F7E          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0000               __pnvCOMRAM 0001            _initialiseSPI 7F90  
                _SPIRead 7F84           ?_initialiseSPI 0000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F7C                  __ramtop 0800  
                __ptext0 7FB2                  __ptext1 7F90                  __ptext2 7F84  
   end_of_initialization 7F7E                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94          ??_initialiseSPI 0000      start_initialization 7F7C  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0002                 ?_SPIRead 0000  
               _LATBbits 000F8A                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000         __size_of_SPIRead 000C                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 004E    __end_of_initialiseSPI 7FB2  
  __CFG_CPUDIV$OSC1_PLL2 000000              _OSCTUNEbits 000F9B               _INTCONbits 000FF2  
             _OSCCONbits 000FD3      __CFG_FOSC$INTOSC_EC 000000              _SSPCON1bits 000FC6  
